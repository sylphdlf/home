<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dlf.model.mapper.UserMapper2">
    <resultMap id="BaseResultMap" type="com.dlf.model.po.User">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="username" jdbcType="VARCHAR" property="username" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="real_name" jdbcType="VARCHAR" property="realName" />
        <result column="gender" jdbcType="INTEGER" property="gender" />
        <result column="mobile" jdbcType="VARCHAR" property="mobile" />
        <result column="telephone" jdbcType="VARCHAR" property="telephone" />
        <result column="status" jdbcType="INTEGER" property="status" />
        <result column="org_code" jdbcType="VARCHAR" property="orgCode" />
        <result column="remarks" jdbcType="VARCHAR" property="remarks" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
        <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
        <result column="update_user_id" jdbcType="BIGINT" property="updateUserId" />
        <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    </resultMap>

    <sql id="Base_Column_List">
    id, username, password, real_name, gender, mobile, telephone, status, org_code, remarks,
    create_time, update_time, create_user_id, update_user_id, is_deleted
    </sql>

    <sql id="Base_Visible_List">
    id, username, real_name AS realName, gender, mobile, telephone, status, org_code AS orgCode, remarks,
    create_time AS createTime, update_time AS updateTime
    </sql>
    <select id="countByParams" parameterType="com.dlf.model.po.User" resultType="java.lang.Integer">
        SELECT count(1)
        from u_user
        where 1=1
        <if test="username != null and username != ''">
            and username = #{username,jdbcType=VARCHAR}
        </if>
        and is_deleted = 0
    </select>
    <select id="selectByUsername" parameterType="com.dlf.model.po.User" resultMap="BaseResultMap">
      SELECT
      <include refid="Base_Column_List" />
      from u_user
      where username = #{username,jdbcType=VARCHAR}
    </select>

    <select id="getAllUsername" resultType="java.lang.String">
        SELECT username FROM u_user
    </select>

    <select id="queryListByParams" parameterType="com.dlf.model.dto.user.UserSearchDTO" resultType="com.dlf.model.dto.user.UserDTO">
        SELECT
        <include refid="Base_Visible_List"/>
        FROM u_user
        where 1=1
        <if test="username != null and username != ''">
            and username = #{username,jdbcType=VARCHAR}
        </if>
        <if test="mobile != null and mobile != ''">
            and mobile = #{mobile,jdbcType=VARCHAR}
        </if>
        and is_deleted = 0
    </select>

    <select id="getRoleIdsByUserId" parameterType="java.lang.Long" resultType="com.dlf.model.dto.user.RoleDTO">
        SELECT r.id, r.code, r.name
        FROM  u_user_role ur LEFT JOIN u_role r ON ur.role_id = r.id
        WHERE ur.user_id = #{id, jdbcType=BIGINT}
    </select>

    <insert id="insertUserRoles" parameterType="com.dlf.model.dto.user.UserReqDTO">
        INSERT INTO u_user_role (user_id, role_id, create_time, create_user_id) VALUES
        <foreach collection ="toAddIds" item="thisItem" index= "index" separator =",">
            (
            #{id,jdbcType=BIGINT},#{thisItem,jdbcType=BIGINT}, #{createTime, jdbcType=TIMESTAMP}, #{createUserId, jdbcType=BIGINT}
            )
        </foreach>
    </insert>

    <delete id="delUserRoles" parameterType="com.dlf.model.dto.user.UserReqDTO">
        DELETE FROM u_user_role WHERE user_id = #{id,jdbcType=BIGINT} AND role_id IN
        <foreach collection ="toDelIds" item="thisItem" index= "index" separator ="," open="(" close=")">
            #{thisItem,jdbcType=BIGINT}
        </foreach>
    </delete>

    <insert id="insertWithIdReturn" parameterType="com.dlf.model.po.User">
        insert into u_user (id, username, password,
                            real_name, gender, mobile,
                            telephone, status, org_code,
                            remarks, create_time, update_time,
                            create_user_id, update_user_id, is_deleted
        )
        values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
                                       #{realName,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, #{mobile,jdbcType=VARCHAR},
                                       #{telephone,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{orgCode,jdbcType=VARCHAR},
                                       #{remarks,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
                #{createUserId,jdbcType=BIGINT}, #{updateUserId,jdbcType=BIGINT}, #{isDeleted,jdbcType=INTEGER}
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>
</mapper>