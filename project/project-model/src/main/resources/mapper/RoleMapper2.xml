<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dlf.model.mapper.RoleMapper2">
    <resultMap id="BaseResultMap" type="com.dlf.model.po.Role">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="org_id" jdbcType="BIGINT" property="orgId" />
        <result column="code" jdbcType="VARCHAR" property="code" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="remarks" jdbcType="VARCHAR" property="remarks" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
        <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
        <result column="update_user_id" jdbcType="BIGINT" property="updateUserId" />
        <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    </resultMap>

    <sql id="Base_Column_List">
        id, org_id, code, name, remarks, create_time, update_time, create_user_id, update_user_id,
        is_deleted
    </sql>

    <sql id="Base_Visible_List">
        id, org_id, code, name, remarks, create_time AS createTime
    </sql>

    <select id="queryListByParams" parameterType="com.dlf.model.dto.user.RoleSearchDTO" resultType="com.dlf.model.dto.user.RoleDTO">
        SELECT
        a.id, a.org_id AS orgId, b.name AS orgName, a.code, a.name, a.remarks, a.create_time AS createTime
        FROM u_role a LEFT JOIN u_organization b ON a.org_id=b.id
        where 1=1
        <if test="code != null and code != ''">
            and a.code = #{code,jdbcType=VARCHAR}
        </if>
        <if test="name != null and name != ''">
            and a.name = #{name,jdbcType=VARCHAR}
        </if>
        <if test="orgId != null and orgId != ''">
            and a.org_id = #{orgId,jdbcType=BIGINT}
        </if>
        and a.is_deleted = 0
    </select>
    <select id="countByParams" parameterType="com.dlf.model.po.Role" resultType="java.lang.Integer">
        SELECT count(1)
        FROM u_role WHERE 1=1
        <if test="code != null and code != ''">
            and code = #{code,jdbcType=VARCHAR}
        </if>
        <if test="name != null and name != ''">
            and name = #{name,jdbcType=VARCHAR}
        </if>
        and is_deleted = 0
    </select>
    <select id="getRoleListByUser" parameterType="java.lang.Long" resultType="com.dlf.model.dto.user.RoleDTO">
        SELECT r.id, r.name
        FROM u_user_role ur LEFT JOIN u_role r on ur.role_id = r.id
        WHERE ur.user_id = #{id,jdbcType=BIGINT}
    </select>
    <insert id="insertWithIdReturn" parameterType="com.dlf.model.po.Role">
        insert into u_role (id, org_id, code,
                            name, remarks, create_time,
                            update_time, create_user_id, update_user_id,
                            is_deleted)
        values (#{id,jdbcType=BIGINT}, #{orgId,jdbcType=BIGINT}, #{code,jdbcType=VARCHAR},
                #{name,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
                #{updateTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=BIGINT}, #{updateUserId,jdbcType=BIGINT},
                #{isDeleted,jdbcType=INTEGER})
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>
    <insert id="insertRoleFuns" parameterType="com.dlf.model.po.Role2">
        INSERT INTO u_role_function (role_id, function_id, create_time, create_user_id, is_deleted) VALUES
        <foreach collection ="toAddIds" item="thisItem" index= "index" separator =",">
            (
            #{id,jdbcType=BIGINT},#{thisItem,jdbcType=BIGINT},#{createTime,jdbcType=TIMESTAMP},#{createUserId,jdbcType=BIGINT},#{isDeleted,jdbcType=INTEGER}
            )
        </foreach>
    </insert>
    <delete id="delRoleFuns" parameterType="com.dlf.model.po.Role2">
        DELETE FROM u_role_function WHERE role_id = #{id,jdbcType=BIGINT} AND function_id IN
        <foreach collection ="toDelIds" item="thisItem" index= "index" separator ="," open="(" close=")">
            #{thisItem,jdbcType=BIGINT}
        </foreach>
    </delete>
    <delete id="delRoleByUserId" parameterType="java.lang.Long">
        DELETE FROM u_user_role WHERE user_id = #{id,jdbcType=BIGINT}
    </delete>
</mapper>