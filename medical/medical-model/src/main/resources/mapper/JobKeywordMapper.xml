<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dlf.model.mapper.JobKeywordMapper">
  <resultMap id="BaseResultMap" type="com.dlf.model.po.JobKeyword">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="batch_num" jdbcType="INTEGER" property="batchNum" />
    <result column="website" jdbcType="VARCHAR" property="website" />
    <result column="keyword" jdbcType="VARCHAR" property="keyword" />
    <result column="keyword_num" jdbcType="INTEGER" property="keywordNum" />
    <result column="create_userid" jdbcType="BIGINT" property="createUserid" />
    <result column="create_username" jdbcType="VARCHAR" property="createUsername" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_userid" jdbcType="BIGINT" property="updateUserid" />
    <result column="update_username" jdbcType="VARCHAR" property="updateUsername" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
  </resultMap>
  <sql id="Base_Column_List">
    id, batch_num, website, keyword, keyword_num, create_userid, create_username, create_time, 
    update_userid, update_username, update_time, is_deleted
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from job_keyword
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from job_keyword
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.dlf.model.po.JobKeyword">
    insert into job_keyword (id, batch_num, website, 
      keyword, keyword_num, create_userid, 
      create_username, create_time, update_userid, 
      update_username, update_time, is_deleted
      )
    values (#{id,jdbcType=BIGINT}, #{batchNum,jdbcType=INTEGER}, #{website,jdbcType=VARCHAR}, 
      #{keyword,jdbcType=VARCHAR}, #{keywordNum,jdbcType=INTEGER}, #{createUserid,jdbcType=BIGINT}, 
      #{createUsername,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateUserid,jdbcType=BIGINT}, 
      #{updateUsername,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dlf.model.po.JobKeyword">
    insert into job_keyword
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="batchNum != null">
        batch_num,
      </if>
      <if test="website != null">
        website,
      </if>
      <if test="keyword != null">
        keyword,
      </if>
      <if test="keywordNum != null">
        keyword_num,
      </if>
      <if test="createUserid != null">
        create_userid,
      </if>
      <if test="createUsername != null">
        create_username,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUserid != null">
        update_userid,
      </if>
      <if test="updateUsername != null">
        update_username,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="batchNum != null">
        #{batchNum,jdbcType=INTEGER},
      </if>
      <if test="website != null">
        #{website,jdbcType=VARCHAR},
      </if>
      <if test="keyword != null">
        #{keyword,jdbcType=VARCHAR},
      </if>
      <if test="keywordNum != null">
        #{keywordNum,jdbcType=INTEGER},
      </if>
      <if test="createUserid != null">
        #{createUserid,jdbcType=BIGINT},
      </if>
      <if test="createUsername != null">
        #{createUsername,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserid != null">
        #{updateUserid,jdbcType=BIGINT},
      </if>
      <if test="updateUsername != null">
        #{updateUsername,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dlf.model.po.JobKeyword">
    update job_keyword
    <set>
      <if test="batchNum != null">
        batch_num = #{batchNum,jdbcType=INTEGER},
      </if>
      <if test="website != null">
        website = #{website,jdbcType=VARCHAR},
      </if>
      <if test="keyword != null">
        keyword = #{keyword,jdbcType=VARCHAR},
      </if>
      <if test="keywordNum != null">
        keyword_num = #{keywordNum,jdbcType=INTEGER},
      </if>
      <if test="createUserid != null">
        create_userid = #{createUserid,jdbcType=BIGINT},
      </if>
      <if test="createUsername != null">
        create_username = #{createUsername,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserid != null">
        update_userid = #{updateUserid,jdbcType=BIGINT},
      </if>
      <if test="updateUsername != null">
        update_username = #{updateUsername,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dlf.model.po.JobKeyword">
    update job_keyword
    set batch_num = #{batchNum,jdbcType=INTEGER},
      website = #{website,jdbcType=VARCHAR},
      keyword = #{keyword,jdbcType=VARCHAR},
      keyword_num = #{keywordNum,jdbcType=INTEGER},
      create_userid = #{createUserid,jdbcType=BIGINT},
      create_username = #{createUsername,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_userid = #{updateUserid,jdbcType=BIGINT},
      update_username = #{updateUsername,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>